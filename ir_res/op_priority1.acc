fn @getarray(#0: i32* ) -> i32;
fn @getch( ) -> i32;
fn @getint( ) -> i32;
fn @putarray(#0: i32, #1: i32* ) -> ();
fn @putch(#0: i32 ) -> ();
fn @putint(#0: i32 ) -> ();
fn @starttime( ) -> ();
fn @stoptime( ) -> ();
fn @main( ) -> i32 {
%entry:
  let %ret.addr = alloca i32, 1
  let %0 = alloca i32, 1
  let %1 = alloca i32, 1
  let %2 = alloca i32, 1
  let %3 = alloca i32, 1
  let %4 = store 10, %0
  let %5 = store 4, %1
  let %6 = store 2, %2
  let %7 = store 2, %3
  let %8 = alloca i32, 1
  let %9 = load %2
  let %10 = load %0
  let %11 = load %1
  let %12 = mul %10, %11
  let %13 = add %9, %12
  let %14 = load %3
  let %15 = sub %13, %14
  let %16 = store %15, %8
  let %17 = load %8
  let %18 = call @putint, %17
  let %19 = store 0, %ret.addr
  jmp label %exit
%exit:
  let %21 = load %ret.addr
  ret %21
}
