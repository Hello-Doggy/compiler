fn @getarray(#0: i32* ) -> i32;
fn @getch( ) -> i32;
fn @getint( ) -> i32;
fn @putarray(#0: i32, #1: i32* ) -> ();
fn @putch(#0: i32 ) -> ();
fn @putint(#0: i32 ) -> ();
fn @starttime( ) -> ();
fn @stoptime( ) -> ();
fn @if_if_Else( ) -> i32 {
%entry:
  let %ret.addr = alloca i32, 1
  let %0 = alloca i32, 1
  let %1 = store 5, %0
  let %2 = alloca i32, 1
  let %3 = store 10, %2
  jmp label %5
%5:
  let %6 = load %0
  let %7 = eq %6, 5
  br %7, label %9, label %11
%9:
  jmp label %20
%11:
  let %12 = load %0
  let %13 = add %12, 15
  let %14 = store %13, %0
  jmp label %16
%16:
  let %17 = load %0
  let %18 = store %17, %ret.addr
  jmp label %exit
%20:
  let %21 = load %2
  let %22 = eq %21, 10
  br %22, label %24, label %27
%24:
  let %25 = store 25, %0
  jmp label %27
%27:
  jmp label %16
%exit:
  let %29 = load %ret.addr
  ret %29
}
fn @main( ) -> i32 {
%entry:
  let %ret.addr = alloca i32, 1
  let %0 = call @if_if_Else
  let %1 = call @putint, %0
  let %2 = store 0, %ret.addr
  jmp label %exit
%exit:
  let %4 = load %ret.addr
  ret %4
}
