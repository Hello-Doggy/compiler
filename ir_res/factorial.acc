fn @getarray(#0: i32* ) -> i32;
fn @getch( ) -> i32;
fn @getint( ) -> i32;
fn @putarray(#0: i32, #1: i32* ) -> ();
fn @putch(#0: i32 ) -> ();
fn @putint(#0: i32 ) -> ();
fn @starttime( ) -> ();
fn @stoptime( ) -> ();
fn @factorial(#n: i32 ) -> i32 {
%entry:
  let %0 = alloca i32, 1
  let %1 = store #n, %0
  let %ret.addr = alloca i32, 1
  jmp label %3
%3:
  let %4 = load %0
  let %5 = eq %4, 0
  br %5, label %7, label %10
%7:
  let %8 = store 1, %ret.addr
  jmp label %exit
%10:
  let %11 = load %0
  let %12 = load %0
  let %13 = sub %12, 1
  let %14 = call @factorial, %13
  let %15 = mul %11, %14
  let %16 = store %15, %ret.addr
  jmp label %exit
%exit:
  let %18 = load %ret.addr
  ret %18
}
fn @main( ) -> i32 {
%entry:
  let %ret.addr = alloca i32, 1
  let %0 = alloca i32, 1
  let %1 = call @getint
  let %2 = store %1, %0
  let %3 = alloca i32, 1
  let %4 = load %0
  let %5 = call @factorial, %4
  let %6 = store %5, %3
  let %7 = load %3
  let %8 = call @putint, %7
  let %9 = store 0, %ret.addr
  jmp label %exit
%exit:
  let %11 = load %ret.addr
  ret %11
}
