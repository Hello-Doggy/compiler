fn @getarray(#0: i32* ) -> i32;
fn @getch( ) -> i32;
fn @getint( ) -> i32;
fn @putarray(#0: i32, #1: i32* ) -> ();
fn @putch(#0: i32 ) -> ();
fn @putint(#0: i32 ) -> ();
fn @starttime( ) -> ();
fn @stoptime( ) -> ();
fn @f( ) -> i32 {
%entry:
  let %ret.addr = alloca i32, 1
  let %0 = store 10, %ret.addr
  jmp label %exit
%exit:
  let %2 = load %ret.addr
  ret %2
}
fn @main( ) -> i32 {
%entry:
  let %ret.addr = alloca i32, 1
  let %0 = call @f
  let %1 = call @putint, %0
  let %2 = store 0, %ret.addr
  jmp label %exit
%exit:
  let %4 = load %ret.addr
  ret %4
}
