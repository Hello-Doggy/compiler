#ifndef TreeNodeDefine
#define TreeNodeDefine(x)
#endif

#ifndef OpcodeDefine
#define OpcodeDefine(x, s)
#endif

TreeNodeDefine(ND_UnaryExpr)
    TreeNodeDefine(ND_BinaryExpr)
        TreeNodeDefine(ND_IntegerLiteral)
            TreeNodeDefine(ND_AssignExpr)
                TreeNodeDefine(ND_IfElseExpr)
                    TreeNodeDefine(ND_LoopExpr)
                        TreeNodeDefine(ND_LoopControlExpr)
                            TreeNodeDefine(ND_ReturnExpr)
                                TreeNodeDefine(ND_FuncExpr)
                                    TreeNodeDefine(ND_ValExpr)
                                        TreeNodeDefine(ND_Root)
                                            TreeNodeDefine(ND_VarDecl)
                                                TreeNodeDefine(ND_FuncDef)

    // Binary Opcode
    OpcodeDefine(OP_Add, "add")
        OpcodeDefine(OP_Sub, "sub")
            OpcodeDefine(OP_Mul, "mul")
                OpcodeDefine(OP_Div, "div")
                    OpcodeDefine(OP_Mod, "mod")
                        OpcodeDefine(OP_Lt, "lt")
                            OpcodeDefine(OP_Gt, "gt")
                                OpcodeDefine(OP_Le, "le")
                                    OpcodeDefine(OP_Ge, "ge")
                                        OpcodeDefine(OP_Eq, "eq")
                                            OpcodeDefine(OP_Ne, "ne")
                                                OpcodeDefine(OP_Land, "and")
                                                    OpcodeDefine(OP_Lor, "or")
                                                        OpcodeDefine(OP_Lxor, "xor")
    // Unary Opcode
    OpcodeDefine(OP_Lnot, "not")
        OpcodeDefine(OP_Neg, "neg")
            OpcodeDefine(OP_Pos, "pos")

#undef TreeNodeDefine
#undef OpcodeDefine